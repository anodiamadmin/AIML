Rooms = c(8, 9, 7, 4, 10, 6, 9, 13, 6, 12, 6, 10, 8, 10, 11, 9, 4, 12, 9, 7)
)
# Scatter plot
ggplot(data, aes(x = Rooms, y = SellingPrice, color = as.factor(Location))) +
geom_point(size = 3) +
labs(title = "Relationship between House Size and Selling Price",
x = "Number of Rooms",
y = "Selling Price (in $1000s)",
color = "Suburb") +
scale_color_manual(values = c("blue", "red"),
labels = c("Dandenong (East)", "Sunshine (West)")) +
theme_minimal()
install.packages("ggplot2")
# Load necessary libraries
library(ggplot2)
# Data
data <- data.frame(
SellingPrice = c(345, 655, 325, 478, 432, 233, 567, 988, 199, 934,
258, 379, 355, 643, 710, 585, 312, 870, 670, 280),
Location = c(0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1),
Rooms = c(8, 9, 7, 4, 10, 6, 9, 13, 6, 12, 6, 10, 8, 10, 11, 9, 4, 12, 9, 7)
)
# Scatter plot
ggplot(data, aes(x = Rooms, y = SellingPrice, color = as.factor(Location))) +
geom_point(size = 3) +
labs(title = "Relationship between House Size and Selling Price",
x = "Number of Rooms",
y = "Selling Price (in $1000s)",
color = "Suburb") +
scale_color_manual(values = c("blue", "red"),
labels = c("Dandenong (East)", "Sunshine (West)")) +
theme_minimal()
library(ggplot2)
setwd = ("D:\AIML\02FoundationsOfDataScience\R_Programming")
setwd = ("D:/AIML/02FoundationsOfDataScience/R_Programming")
setwd = ("D:/AIML/02FoundationsOfDataScience/R_Programming")
summary(houses)
library(ggpl
library(ggpl
library(ggplot2)
setwd = ("D:/AIML/02FoundationsOfDataScience/R_Programming")
houses = read_excel("HousingPrices.xlsx")
houses = read_excel("HousingPrices.xlsx")
library(xlsx)
library(readxl)
install.packages("tidyverse")
install.packages("readxl")
houses = read_excel("HousingPrices.xlsx")
install.packages("read_excel")
library(xlsx)
library(readxl)
houses = read_excel("HousingPrices.xlsx")
houses = read_excel("./HousingPrices.xlsx")
setwd = ("D:/AIML/02FoundationsOfDataScience/R_Programming")
houses = read_excel("./HousingPrices.xlsx")
houses = read_excel("D:/AIML/02FoundationsOfDataScience/R_Programming/HousingPrices.xlsx")
summary(houses)
setwd = ("D:/AIML/02FoundationsOfDataScience/R_Programming")
houses = read_excel("HousingPrices.xlsx")
houses = read_excel("/HousingPrices.xlsx")
houses = read_excel("./HousingPrices.xlsx")
summary(houses)
ggplot(data, aes(x = Rooms, y = SellingPrice, color = as.factor(Location))) +
geom_point(size = 3) +
labs(title = "Relationship between House Size and Selling Price",
x = "Number of Rooms",
y = "Selling Price (in $1000s)",
color = "Suburb") +
scale_color_manual(values = c("blue", "red"),
labels = c("Dandenong (East)", "Sunshine (West)")) +
theme_minimal()
ggplot(data, aes(x = Rooms, y = SellingPrice, color = as.factor(Location))) +
geom_point(size = 3) +
labs(title = "Relationship between Number of Rooms and Selling Price",
x = "Number of Rooms",
y = "Selling Price (in $1000s)",
color = "Suburb") +
scale_color_manual(values = c("blue", "red"),
labels = c("Dandenong (East)", "Sunshine (West)")) +
theme_minimal()
ggplot(data, aes(x = Rooms, y = SellingPrice, color = as.factor(Location))) +
geom_point(size = 3) +
labs(title = "Number of Rooms Vs House Selling Price",
x = "Number of Rooms",
y = "Selling Price (in $1000s)",
color = "Suburb") +
scale_color_manual(values = c("blue", "red"),
labels = c("Dandenong (East)", "Sunshine (West)")) +
theme_minimal()
houses = read_excel("./HousingPrices.xlsx", header=T)
houses = read_excel("./HousingPrices.xlsx", header='T')
library(ggplot2)
houses = read_excel("D:/AIML/02FoundationsOfDataScience/R_Programming/HousingPrices.xlsx")
summary(houses)
# Fit multiple regression model
model <- lm(SellingPrice ~ Rooms + Location, data = data)
# Summary of the model
summary(model)
# Predict selling price for a 9-room house in Melbourne's east (Location = 0)
new_house <- data.frame(Rooms = 9, Location = 0)
predicted_price <- predict(model, newdata = new_house)
# Print the predicted price
predicted_price
# Load necessary libraries
library(ggplot2)
# Data
data = read_excel("D:/AIML/02FoundationsOfDataScience/R_Programming/HousingPrices.xlsx")
# Fit the multiple regression model
model <- lm(SellingPrice ~ Rooms + Location, data = data)
library(ggplot2)
houses = read_excel("D:/AIML/02FoundationsOfDataScience/R_Programming/HousingPrices.xlsx")
summary(houses)
# Fit multiple regression model
model <- lm(SellingPrice ~ Rooms + Location, data = data)
# Summary of the model
summary(model)
# Perform F-Test using ANOVA
anova_result <- anova(model)
# View ANOVA table and p-value
anova_result
houses = read_excel("D:/AIML/02FoundationsOfDataScience/R_Programming/HousingPrices.xlsx")
summary(houses)
# Fit multiple regression model
model <- lm(SellingPrice ~ Rooms + Location, data = data)
# Summary of the model
summary(model)
# Perform F-Test using ANOVA
anova_result <- anova(model)
# View ANOVA table and p-value
anova_result
model <- lm(SellingPrice ~ Rooms + Location, data = dclsata)
cls
library(ggplot2)
houses = read_excel("D:/AIML/02FoundationsOfDataScience/R_Programming/HousingPrices.xlsx")
summary(houses)
# Fit multiple regression model
model <- lm(SellingPrice ~ Rooms + Location, data = data)
# Summary of the model
summary(model)
# Perform F-Test using ANOVA
anova_result <- anova(model)
# View ANOVA table and p-value
anova_result
library(ggplot2)
houses = read_excel("D:/AIML/02FoundationsOfDataScience/R_Programming/HousingPrices.xlsx")
summary(houses)
# Fit multiple regression model
model <- lm(SellingPrice ~ Rooms + Location, data = data)
# Summary of the model
summary(model)
# Predict selling price for a 9-room house in Melbourne's east (Location = 0)
new_house <- data.frame(Rooms = 9, Location = 0)
predicted_price <- predict(model, newdata = new_house)
# Print the predicted price
predicted_price
# Retrieve the coefficients (beta values)
coefficients <- coef(model)
# Print the beta values
coefficients
# Summary of the model
summary(model)
# Load necessary libraries
library(ggplot2)
# Data
houses = read_excel("D:/AIML/02FoundationsOfDataScience/R_Programming/HousingPrices.xlsx")
summary(houses)
# Fit the multiple regression model
model <- lm(SellingPrice ~ Rooms + Location, data = data)
# Summary of the model
summary(model)
# Load necessary libraries
library(ggplot2)
# Data
houses = read_excel("D:/AIML/02FoundationsOfDataScience/R_Programming/HousingPrices.xlsx")
summary(houses)
# Fit the multiple regression model
model <- lm(SellingPrice ~ Rooms + Location, data = data)
# Summary of the model to get t-tests and p-values for individual coefficients
summary_model <- summary(model)
# Print the summary which includes t-test results and p-values
summary_model
# Load necessary libraries
library(ggplot2)
houses = read_excel("D:/AIML/02FoundationsOfDataScience/R_Programming/HousingPrices.xlsx")
summary(houses)
# Fit multiple regression model
model <- lm(SellingPrice ~ Rooms + Location, data = data)
# Summary of the model to get t-tests and p-values for individual coefficients
summary_model <- summary(model)
# Print the summary which includes t-test results and p-values
summary_model
# Summary of the model to get t-tests and p-values for individual coefficients
summary_model <- summary(model)
# Print the summary which includes t-test results and p-values
summary_model
houses = read_excel("D:/AIML/02FoundationsOfDataScience/R_Programming/HousingPrices.xlsx")
summary(houses)
# Fit multiple regression model
model <- lm(SellingPrice ~ Rooms + Location, data = data)
# Summary of the model
summary(model)
# Perform F-Test using ANOVA
anova_result <- anova(model)
# View ANOVA table and p-value
anova_result
houses = read_excel("D:/AIML/02FoundationsOfDataScience/R_Programming/HousingPrices.xlsx")
summary(houses)
# Fit multiple regression model
model <- lm(SellingPrice ~ Rooms + Location, data = data)
# Summary of the model
summary(model)
library(ggplot2)
houses = read_excel("D:/AIML/02FoundationsOfDataScience/R_Programming/HousingPrices.xlsx")
summary(houses)
# Fit multiple regression model
model <- lm(SellingPrice ~ Rooms + Location, data = data)
# Summary of the model to get t-tests and p-values for individual coefficients
summary_model <- summary(model)
# Print the summary which includes t-test results and p-values
summary_model
# Perform F-Test using ANOVA
anova_result <- anova(model)
# View ANOVA table and p-value
anova_result
# Predict selling price for a 9-room house in Melbourne's east (Location = 0)
new_house <- data.frame(Rooms = 9, Location = 0)
predicted_price <- predict(model, newdata = new_house)
# Print the predicted price
predicted_price
# Retrieve the coefficients (beta values)
coefficients <- coef(model)
# Print the beta values
coefficients
# Add the interaction term (Location * Number of Rooms)
data$X1X2 <- data$Location * data$Number_of_Rooms
# Fit the multiple linear regression model with the interaction term
model_with_interaction <- lm(Selling_Price ~ Location + Rooms + X1X2, data = data)
houses = read_excel("D:/AIML/02FoundationsOfDataScience/R_Programming/HousingPrices.xlsx")
library(ggplot2)
houses = read_excel("D:/AIML/02FoundationsOfDataScience/R_Programming/HousingPrices.xlsx")
summary(houses)
# Fit multiple regression model
model <- lm(SellingPrice ~ Rooms + Location, data = data)
library(ggplot2)
houses = read_excel("D:/AIML/02FoundationsOfDataScience/R_Programming/HousingPrices.xlsx")
summary(houses)
# Fit multiple regression model
model <- lm(SellingPrice ~ Rooms + Location, data = data)
# Fit multiple regression model
model <- lm(SellingPrice ~ Rooms + Location, data = data)
library(ggplot2)
houses = read_excel("D:/AIML/02FoundationsOfDataScience/R_Programming/HousingPrices.xlsx")
summary(houses)
# Fit multiple regression model
model <- lm(SellingPrice ~ Rooms + Location, data = data)
# Fit multiple regression model
model <- lm(Price ~ Rooms + Location, data = data)
# Summary of the model to get t-tests and p-values for individual coefficients
summary_model <- summary(model)
# Print the summary which includes t-test results and p-values
summary_model
# Perform F-Test using ANOVA
anova_result <- anova(model)
# View ANOVA table and p-value
anova_result
# Predict selling price for a 9-room house in Melbourne's east (Location = 0)
new_house <- data.frame(Rooms = 9, Location = 0)
predicted_price <- predict(model, newdata = new_house)
# Print the predicted price
predicted_price
# Retrieve the coefficients (beta values)
coefficients <- coef(model)
# Print the beta values
coefficients
# Add the interaction term (Location * Number of Rooms)
data$X1X2 <- data$Location * data$Number_of_Rooms
# Fit the multiple linear regression model with the interaction term
model_with_interaction <- lm(Selling_Price ~ Location + Rooms + X1X2, data = data)
# Add the interaction term (Location * Number of Rooms)
data$X1X2 <- data$Location * data$Rooms
# Fit the multiple linear regression model with the interaction term
model_with_interaction <- lm(SellingPrice ~ Location + Rooms + X1X2, data = data)
# Fit the multiple linear regression model with the interaction term
model_with_interaction <- lm(Price ~ Location + Rooms + X1X2, data = data)
houses = read_excel("D:/AIML/02FoundationsOfDataScience/R_Programming/HousingPrices.xlsx")
summary(houses)
library(ggplot2)
houses = read_excel("D:/AIML/02FoundationsOfDataScience/R_Programming/HousingPrices.xlsx")
summary(houses)
# Fit multiple regression model
model <- lm(Price ~ Rooms + Location, data = data)
# Fit multiple regression model
model <- lm(Price ~ Rooms + Location, data = houses)
# Summary of the model to get t-tests and p-values for individual coefficients
summary_model <- summary(model)
library(ggplot2)
houses = read_excel("D:/AIML/02FoundationsOfDataScience/R_Programming/HousingPrices.xlsx")
summary(houses)
# Fit multiple regression model
model <- lm(Price ~ Rooms + Location, data = houses)
# Summary of the model to get t-tests and p-values for individual coefficients
summary_model <- summary(model)
# Print the summary which includes t-test results and p-values
summary_model
# Perform F-Test using ANOVA
anova_result <- anova(model)
# View ANOVA table and p-value
anova_result
# Predict selling price for a 9-room house in Melbourne's east (Location = 0)
new_house <- data.frame(Rooms = 9, Location = 0)
predicted_price <- predict(model, newdata = new_house)
# Print the predicted price
predicted_price
# Retrieve the coefficients (beta values)
coefficients <- coef(model)
# Print the beta values
coefficients
# Add the interaction term (Location * Number of Rooms)
data$X1X2 <- data$Location * data$Rooms
# Add the interaction term (Location * Number of Rooms)
houses$X1X2 <- houses$Location * houses$Rooms
# Fit the multiple linear regression model with the interaction term
model_with_interaction <- lm(Price ~ Location + Rooms + X1X2, data = houses)
# Print the summary of the regression model
summary(model_with_interaction)
library(ggplot2)
houses = read_excel("D:/AIML/02FoundationsOfDataScience/R_Programming/HousingPrices.xlsx")
summary(houses)
# Fit multiple regression model
model <- lm(Price ~ Rooms + Location, data = houses)
# Summary of the model to get t-tests and p-values for individual coefficients
summary_model <- summary(model)
# Print the summary which includes t-test results and p-values
summary_model
# Perform F-Test using ANOVA
anova_result <- anova(model)
# View ANOVA table and p-value
anova_result
# Predict selling price for a 9-room house in Melbourne's east (Location = 0)
new_house <- data.frame(Rooms = 9, Location = 0)
predicted_price <- predict(model, newdata = new_house)
# Print the predicted price
predicted_price
# Retrieve the coefficients (beta values)
coefficients <- coef(model)
# Print the beta values
coefficients
# Add the interaction term (Location * Number of Rooms)
houses$X1X2 <- houses$Location * houses$Rooms
# Fit the multiple linear regression model with the interaction term
model_with_interaction <- lm(Price ~ Location + Rooms + X1X2, data = houses)
# Print the summary of the regression model
summary(model_with_interaction)
print(P_DN)
P_D <- .01
P_DN <- 1-P_D
print(P_DN)
P_D_Given_Pos <- 0.9*P_D
P_DN_Given_Pos <- 0.9*P_DN
pnorm(-1, mu, sigma)
pnorm(-1, mu, sigma)
pnorm(-1, mu, sigma)
source("D:/AIML/02FoundationsOfDataScience/R_Programming/Asnmt1.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/Asnmt1.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/Asnmt1.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/Asnmt1.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/Asnmt1.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/Asnmt1.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/Asnmt1.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/Asnmt1.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/Asnmt1.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/Asnmt1.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/Asnmt1.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/Asnmt1.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/Asnmt1.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/Asnmt1.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/03HousePricesPrediction.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/FTestForJointSignificance.R")
houses = read_excel("D:\AIML\02FoundationsOfDataScience\R_Programming\HousingPrices.xlsx")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/FTestForJointSignificance.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/FTestForJointSignificance.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/FTestForJointSignificance.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/FTestForJointSignificance.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/FTestForJointSignificance.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/FTestForJointSignificance.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/FTestForJointSignificance.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/FTestForJointSignificance.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/FTestForJointSignificance.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/FTestForJointSignificance.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/FTestForJointSignificance.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/FTestForJointSignificance.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/FTestForJointSignificance.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/FTestForJointSignificance.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/FTestForJointSignificance.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/FTestForJointSignificance.R")
houses = read_excel("D:\\AIML\\02FoundationsOfDataScience\\R_Programming\\HousingPrices.xlsx")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/FTestForJointSignificance.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/03HousePricesPrediction.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/03HousePricesPrediction.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/03HousePricesPrediction.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/03HousePricesPrediction.R")
cls
clearPushBack
source("D:/AIML/02FoundationsOfDataScience/R_Programming/007EconoicsExamDemo.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/007EconoicsExamDemo.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/007EconoicsExamDemo.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/007EconoicsExamDemo.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/007EconoicsExamDemo.R")
library(ggplot2)
setwd("D:/AIML/02FoundationsOfDataScience/R_Programming/data")
houseData = read_excel("HousePrice.xlsx", sheet = "Datasheet")
summary(houseData)
source("D:/AIML/02FoundationsOfDataScience/R_Programming/007EconoicsExamDemo.R")
library(ggplot2)
setwd("D:/AIML/02FoundationsOfDataScience/R_Programming/data")
houseData = read_excel("HousePrice.xlsx", sheet = "Datasheet")
summary(houseData)
ggplot(data, aes(x=Rooms, y=Price, color=as.factor(Location))) +
geom_point(size = 3) +
labs(title = "Number of Rooms Vs House Selling Price",
x = "Number of Rooms",
y = "Selling Price (in $1000s)",
color = "Suburb") +
scale_color_manual(values = c("blue", "red"),
labels = c("Dandenong (East)", "Sunshine (West)")) +
theme_minimal()
library(ggplot2)
setwd("D:/AIML/02FoundationsOfDataScience/R_Programming/data")
houseData = read_excel("HousePrice.xlsx", sheet = "Datasheet")
summary(houseData)
ggplot(data, aes(x=Rooms, y=Price, color=as.factor(Location))) +
geom_point(size = 3) +
labs(title = "Number of Rooms Vs House Selling Price",
x = "Number of Rooms",
y = "Selling Price (in $1000s)",
color = "Suburb") +
scale_color_manual(values = c("blue", "red"),
labels = c("Dandenong (East)", "Sunshine (West)")) +
theme_minimal()
ggplot(houseData, aes(x=Rooms, y=Price, color=as.factor(Location))) +
geom_point(size = 3) +
labs(title = "Number of Rooms Vs House Selling Price",
x = "Number of Rooms",
y = "Selling Price (in $1000s)",
color = "Suburb") +
scale_color_manual(values = c("blue", "red"),
labels = c("Dandenong (East)", "Sunshine (West)")) +
theme_minimal()
source("D:/AIML/02FoundationsOfDataScience/R_Programming/007EconoicsExamDemo.R")
source("D:/AIML/02FoundationsOfDataScience/R_Programming/007EconoicsExamDemo.R")
ggplot(houseData, aes(x=Rooms, y=Price, color=as.factor(Location))) +
geom_point(size = 3) +
labs(title = "Number of Rooms Vs House Selling Price",
x = "Number of Rooms",
y = "Selling Price (in $1000s)",
color = "Suburb") +
scale_color_manual(values = c("blue", "red"),
labels = c("Dandenong (East)", "Sunshine (West)")) +
theme_minimal() + geom_smooth(method = 'lm')
ggplot(houseData, aes(x=log(Rooms), y=Price, color=as.factor(Location))) +
geom_point(size = 3) +
labs(title = "Number of Rooms Vs House Selling Price",
x = "Number of Rooms",
y = "Selling Price (in $1000s)",
color = "Suburb") +
scale_color_manual(values = c("blue", "red"),
labels = c("Dandenong (East)", "Sunshine (West)")) +
theme_minimal() + geom_smooth(method = 'lm')
ggplot(houseData, aes(x=exp(Rooms), y=Price, color=as.factor(Location))) +
geom_point(size = 3) +
labs(title = "Number of Rooms Vs House Selling Price",
x = "Number of Rooms",
y = "Selling Price (in $1000s)",
color = "Suburb") +
scale_color_manual(values = c("blue", "red"),
labels = c("Dandenong (East)", "Sunshine (West)")) +
theme_minimal() + geom_smooth(method = 'lm')
#ggplot(houseData, aes(x=exp(Rooms), y=Price, color=as.factor(Location))) +
#ggplot(houseData, aes(x=log(Rooms), y=Price, color=as.factor(Location))) +
ggplot(houseData, aes(x=Rooms, y=Price, color=as.factor(Location))) +
geom_point(size = 3) +
labs(title = "Number of Rooms Vs House Selling Price",
x = "Number of Rooms",
y = "Selling Price (in $1000s)",
color = "Suburb") +
scale_color_manual(values = c("blue", "red"),
labels = c("Dandenong (East)", "Sunshine (West)")) +
theme_minimal() + geom_smooth(method = 'lm')
#ggplot(houseData, aes(x=log(Rooms), y=Price, color=as.factor(Location))) +
#ggplot(houseData, aes(x=Rooms, y=Price, color=as.factor(Location))) +
#  geom_point(size = 3) +
#  labs(title = "Number of Rooms Vs House Selling Price",
#       x = "Number of Rooms",
#       y = "Selling Price (in $1000s)",
#       color = "Suburb") +
#  scale_color_manual(values = c("blue", "red"),
#                     labels = c("Dandenong (East)", "Sunshine (West)")) +
#  theme_minimal() + geom_smooth(method = 'lm')
ggplot(houseData, aes(x=Rooms, y=Price)) + geom_point() + geom_smooth(method = 'lm')
#ggplot(houseData, aes(x=log(Rooms), y=Price, color=as.factor(Location))) +
#ggplot(houseData, aes(x=Rooms, y=Price, color=as.factor(Location))) +
#  geom_point(size = 3) +
#  labs(title = "Number of Rooms Vs House Selling Price",
#       x = "Number of Rooms",
#       y = "Selling Price (in $1000s)",
#       color = "Suburb") +
#  scale_color_manual(values = c("blue", "red"),
#                     labels = c("Dandenong (East)", "Sunshine (West)")) +
#  theme_minimal() + geom_smooth(method = 'lm')
ggplot(houseData, aes(x=Rooms, y=Price)) + geom_point() + geom_smooth(method = 'lm')
reg = lm(Price ~ Rooms + Location, data=houseData)
summary(reg)
