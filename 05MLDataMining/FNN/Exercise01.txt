# ------------------------
# Python Challenge
# ------------------------
# Train FNN model with two selected classification datasets from the UCI machine learning repository.
# Evaluate the effect of number of hidden neurons, and learning rate [0.1, 0.2 ...1].
# Try 10 experiments with different random state in data split (60/40 train/test)
# or different initial weights for each run.
# Report the mean and standard deviation for each experiment and plot your results.
# ------------------------
# Optional (this will require more time and not part of the course assessment)
# Try to add another hidden later and update the forward and backward pass.
# Can you generalize to any user-selected number of hidden layers?
# Discuss how you will do this and implement it if possible.
# ------------------------
# R Challenge :Use either Caret or Keras in R.
# Try training the FNN model with two selected classification datasets from the UCI ML repository.
# Evaluate the effect of the number of hidden neurons, and learning rate [0.1, 0.2 ...1].
# Try 10 experiments with different initial positions in weight space for each case.
# report mean and standard deviation for each experiment and plot your results.
# Ref: https://cran.r-project.org/web/packages/caret/vignettes/caret.html
# ------------------------
# Resources: Example datasets http://archive.ics.uci.edu/ml/datasets
# ------------------------

import